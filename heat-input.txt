#  -*-getpot-*-
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Inputs for Heat Equation Solver
#
#
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
# Domain we are solving the equation on
# ------------------------------------------------------------------------------


# ------------------------------------------------------------------------------
# Generic modes/options, defined globally
# ------------------------------------------------------------------------------

verify = 0 # Option to run in verification mode
mode = 0   # Option to run in stadard or debug mode

[domain]

dimension = 1 # Problem dimension, 1 or 2d
N = 10        # Mesh Discretization

        Parses command line arguments, which are as follows:
        --dim : 1, 2 (default 1)
            Choice between 1D or 2D problems
        --order : 2, 4 (defaul)
            Choice between 2nd or 4th-order finite differences
        --N : int
            Mesh sizing options
        --verify : bool ???
            Option to run in a verification mode
        --solver : jacobi, gauss
            Choice between Jacobi or Gauss-Seidel solvers
        --mode : standard, debug
            Option to control standard output mode (e.g. standard vs debug)


# ------------------------------------------------------------------------------
# Options for how to solve the PDE
# ------------------------------------------------------------------------------

[solver]

order = 2 # Finite Difference Order to use
solver = 'jacobi' # Iterative method to use to solve linear system, jacobi or gauss-Seidel
# note: could turn into an integer option if we're trying to save as much time as possible,
# integer comparison is much cheaper than string comparison
